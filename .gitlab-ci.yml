variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/

build:
  stage: build
  image: node:8  
  script:
    - yarn install
    - yarn run test

android:
  stage: apps
  image: openjdk:8-jdk
  before_script:    
    - apt-get --quiet update --yes
    - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 build-essential ruby ruby-dev
    - curl -sL https://deb.nodesource.com/setup_8.x | bash -
    - apt-get install -y nodejs
    - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
    - unzip -d android-sdk-linux android-sdk.zip
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
    - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
    - export ANDROID_HOME=$PWD/android-sdk-linux
    - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
    # temporarily disable checking for EPIPE error and use yes to accept all licenses
    - set +o pipefail
    - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
    - set -o pipefail    
    - gem install bundle
  script:
    - cd android
    - bundle install
    - mkdir -p test-results/fastlane
    - bundle exec fastlane test
    - mv fastlane/report.xml test-results/fastlane

ios:
  stage: apps
  image: node:8  
  script:
    - yarn install    
    # - cd node_modules/react-native/scripts && ./ios-install-third-party.sh
    # - cd third-party/glog-0.3.4/ && ./configure && cd ../../../../ios
    - bundler install --path vendor/bundle
    - mkdir -p test-results/fastlane
    - fastlane test
    - mv fastlane/report.xml test-results/fastlane
  tags:
    - ios    

stages:
  - build
  - apps